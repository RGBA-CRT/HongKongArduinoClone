#include <RGBALib.sbp>
#include "HongKongArduinoClone.idx"


Const ProgramName = "HongKongArduinoClone"
Const VerStr = "v1.1d 2020/05/09" 'FhashSave対応, ST018BIOS, CX4, 自動ボーレート対応, ST010 save, リファクタリング
Const INIFILE_NAME = "HongKongArduinoClone.ini"
Const FIRMWARE_NAME = "HongKongArduinoFast"

Const DEFAULT_BAUDRATE = 1000000
Const DEFAULT_CONTINUE = 20
Const DEFAULT_DUMP_SIZE = 4
Const DEFAULT_QDD_BUFSIZE = 1024 * 512

Const DEVICE_BUFFER_SIZE_OUT = 16 * 1024
Const DEVICE_BUFFER_SIZE_IN = 16 * 1024

'タイムアウト設定
Const HKAC_TRANSFER_FLOAT_TIME_MUL = 2.5
Const HKAC_TRANSFER_FLOAT_TIME_ADD = 10

'ファームウェアと同期すべき案件
Const INITIAL_BAUDRATE = 115200
Const HKAC_WRITE_BUFFER_LEN = &HFF
Const FIRMWARE_ID = "HKAF"
Const FIRMWARE_VERSION = &H34

const ID_DLG_TAB = &H1001
Dim INIFILE_PATH AS BytePtr


#define DEBUG_BUILD
#ifdef DEBUG_BUILD
#console
#else
Declare Function AllocConsole Lib "kernel32" () As Long
Declare Function FreeConsole Lib "kernel32" () As Long
Dim _System_hConsoleOut As HANDLE
_System_hConsoleOut = GetStdHandle(STD_OUTPUT_HANDLE)
#endif

'受信タイムアウト追加時間の設定読み込み
Dim HKAC_RX_TIMEOUT_MARGIN AS Long
HKAC_RX_TIMEOUT_MARGIN = GetPrivateProfileInt(ProgramName, "RxTimeoutMargine", 10, INIFILE_PATH)

'---------------------------
'  Window Message Loop
'---------------------------
RegisterSubClass()
RegistAcceleratorKey()

Dim msgMain As MSG, iResult As Long
Do
	iResult = GetMessage(msgMain, 0, 0, 0)
	If iResult = 0 Then ExitDo
	
	if TranslateAccelerator(hMainWnd, hAccel, msgMain) = FALSE Then 'ショートカットキー
		If IsDialogMessage(hMainWnd, msgMain) = FALSE Then 'TAB用
			TranslateMessage(msgMain)
			DispatchMessage(msgMain)
		End If
	End If
Loop

' Call destructores and exit process
DestroyAcceleratorTable(hAccel)
FreeConsole()
ExitProcess(0)