'-----------------------------------------------------------------------------
'  イベント プロシージャ
'-----------------------------------------------------------------------------
' このファイルには、ウィンドウ [BSMem] に関するイベントをコーディングします。
' ウィンドウ ハンドル: hBSMem

' TODO: この位置にグローバルな変数、構造体、定数、関数を定義します。


'-----------------------------------------------------------------------------
' ウィンドウメッセージを処理するためのコールバック関数

Function BSMemProc(hWnd As HWND, dwMsg As DWord, wParam As WPARAM, lParam As LPARAM) As DWord
	' TODO: この位置にウィンドウメッセージを処理するためのコードを記述します。

	' イベントプロシージャの呼び出しを行います。
	BSMemProc=EventCall_BSMemWnd(hWnd,dwMsg,wParam,lParam)
End Function


'-----------------------------------------------------------------------------
' ここから下は、イベントプロシージャを記述するための領域になります。
Sub BSM_open()
	if hBSMem=NULL Then CreateDialog(hMainWnd,"BSMemWnd")
	MainWnd_Move(0,0)
	BSMW_bMove=FALSE
End Sub

Sub BSM_close()
	if hBSMem=NULL Then ExitSub
	SendMessage(hBSMem,WM_CLOSE,0,0)
End Sub

Dim BSMW_bMove AS BOOL
Sub BSMemWnd_Move(x As Integer, y As Integer)
	if BSMW_bMove=TRUE Then ExitSub
	
	Dim sfrect aS RECT
	GetWindowRect(hBSMem,sfrect)
	Dim mwrect aS RECT, mw_width AS Long
	GetWindowRect(hMainWnd,mwrect)
	Dim wndframe_x AS Long
	wndframe_x = GetSystemMetrics(SM_CXSIZEFRAME)*2

	BSMW_bMove=TRUE
	mw_width=mwrect.right-mwrect.left
	SetWindowPos(hMainWnd,NULL,sfrect.left-mw_width-wndframe_x,sfrect.top,0,0,SWP_NOSIZE or SWP_NOACTIVATE)
	BSMW_bMove=FALSE
End Sub
	
Sub BSMemWnd_ListBox1_SelChange()
	if SendMessage(BSMWnd(ListBox1), LB_GETCURSEL,0,0)=0 Then
		EnableWindow(BSMWnd(CommandButton3),FALSE)
	Else
		EnableWindow(BSMWnd(CommandButton3),TRUE)
	End If
End Sub

Function BSMWnd(child AS HWND) AS HWND
	BSMWnd=GetDlgItem(hBSMem,child)
End Function


Sub BSMem_Activate(state As Integer, minimized As Integer)

End Sub

Enum BSM_SLOT_TYPE
	BSM_SLOT_BIOS =0 
	BSM_SLOT_SA1
	BSM_SLOT_HiROM
	BSM_SLOT_SpLoROM
End Enum
Dim slotNameTable[4] = [
	"BS-X BIOS",
	"SA-1  (バス釣り, G-NEXT)",
	"HiROM (鮫亀, 天牌, かなでーる など)",
	"LoROM (ダビスタ96, サウンド, RPGツクール など)",
	0
] AS BytePtr 

Sub BSMemWnd_Create(ByRef CreateStruct As CREATESTRUCT)
	Dim i=0 As Long
	while slotNameTable[i]<>0
		SendMessage(BSMWnd(BSM_CT),CB_ADDSTRING,0,slotNameTable[i])
		i++
	Wend

	SendMessage(BSMWnd(BSM_CT),CB_SETCURSEL,0,0)

End Sub

Sub BSMemWnd_CommandButton1_Click()

	Dim idx As Long
	idx=SendMessage(BSMWnd(BSM_CT),CB_GETCURSEL,0,0)
	if idx=-1 Then DBM("Cartridge type not selected."):exitsub

	DBM(sprintfStr("%s Selected.",slotNameTable[idx]))

	Dim virtualHeader As SFC_CART_INFO
	With virtualHeader				
		lstrcpy(.Title,"BSX Mempack")
		.diableChecksum=TRUE
		.ROMSize=1024*1024
		.ROMType=SFC_MAP_HiROM

		Select Case idx
			Case BSM_SLOT_BIOS
				.AddrOffset=BSX_MEMPACK_ADR_BIOS
				.isLoROM=FALSE
	
			Case BSM_SLOT_SA1
				ErrMes(hBSMem,"未対応です。","SA-1",0)
				ExitSub

			Case BSM_SLOT_HiROM
				.AddrOffset=BSX_MEMPACK_ADR_HiROM
				.isLoROM=FALSE

			Case BSM_SLOT_SpLoROM
				.AddrOffset=BSX_MEMPACK_ADR_LoROM
				.isLoROM=TRUE
		End Select


	End With
	
	Dim path AS BytePtr
#ifndef _DEBUG
	path=SaveDialogCalloc(ex"BSMイメージ(*.bs)\0*.bs\0SFC ROMイメージ(*.sfc)\0*.bs\0すべてのファイル(*.*)\0*.*\0\0","bs",virtualHeader.Title)
	if path=0 Then ExitSub
#else
	path="bsdump.bs"
#endif

	DumpFullROM(VarPtr(virtualHeader),path)
	
#ifndef _DEBUG
	free(path)
#endif

'	.diableChecksum=TRUE
Endsub

	
Sub BSMemWnd_Destroy()
 	hBSMem=NULL
End Sub
